{"version":3,"sources":["src/app/features/register/register.component.html","src/app/features/register/register.component.css","src/app/features/register/register.component.ts","src/app/features/register/register.module.ts","src/app/resolvers/register/register-resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,u0OAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBf,QAAa,iBAAb;AAAA;AAAA;AAWI,iCAAoB,WAApB,EACoB,iBADpB,EAEoB,QAFpB,EAGoB,WAHpB,EAIoB,SAJpB,EAKoB,aALpB,EAMoB,KANpB,EAOoB,MAPpB,EAQmB,SARnB,EAQkD;AAAA;;AAR9B,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,iBAAA,GAAA,iBAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACD,aAAA,SAAA,GAAA,SAAA,CAA+B,CAZlD;;AACA,aAAA,WAAA,GAAuB,IAAvB;AAYC;;AApBL;AAAA;AAAA,mCAsBY;AACJ;AACA,eAAK,mBAAL;AACH;AAzBL;AAAA;AAAA,8CA2BuB;AACf,eAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAC/B,YAAA,IAAI,EAAY,CAAE,EAAF,EAAM,CAAE,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAb,CAAN,CADe;AAE/B,YAAA,KAAK,EAAW,CAAE,EAAF,EAAM,CAAE,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAb,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,KAAjC,CAAN,CAFe;AAG/B,YAAA,QAAQ,EAAQ,CAAE,EAAF,EAAM,CAAE,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAb,CAAN,CAHe;AAI/B,YAAA,KAAK,EAAW,CAAE,EAAF,EAAM,CAAE,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAb,CAAN,CAJe;AAK/B,YAAA,QAAQ,EAAQ,CAAE,EAAF,EAAM,CAAE,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAb,CAAN;AALe,WAAvB,CAAZ;AAOH;AAnCL;AAAA;AAAA,iCAqCgB;;;;;;;;;;;AAER,yBAAK,uBAAL,CAA6B,KAA7B;;AACkB,2BAAM,KAAK,WAAL,CAAiB,UAAjB,CAA4B,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,EAAuB,KAAnD,CAAN;;;AAAd,oBAAA,W;;AAEJ,wBAAG,WAAH,EAAe;AACX,2BAAK,aAAL,GAAqB,IAArB,CAA0B,UAAO,OAAP;AAAA,+BAAmB,kCAAA,CAAA,WAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AAAA;AAAA,gDAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACzC,yCAAM,KAAK,iBAAL,CAAuB,YAAvB,CAAoC,OAApC,EAA4C,eAA5C,CAAN;;AADyC;AAAA;AAG5B,yCAAM,KAAK,gBAAL,CAAsB,OAAtB,CAAN;;AAH4B;AAGrC,kCAAA,MAHqC;;AAKzC,sCAAG,MAAH,EAAU;AACN,yCAAK,aAAL,CAAmB,OAAnB,CAA2B,yFAA3B,EAAqH,IAArH,EAA2H,IAA3H,CAAgI,YAAK;AACjI,sCAAA,MAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,OAA1B;AACH,qCAFD;AAGH,mCAJD,MAKI,KAAK,aAAL,CAAmB,KAAnB,CAAyB,iHAAzB;;AAEJ,uCAAK,uBAAL,CAA6B,IAA7B;;AAZyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAA,EAAnB;AAAA,uBAA1B,EAaE,UAAC,KAAD,EAAU;AACR,wBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;;AACA,wBAAA,KAAI,CAAC,aAAL,CAAmB,KAAnB,CAAyB,4EAAzB;;AACA,wBAAA,KAAI,CAAC,uBAAL,CAA6B,IAA7B;AACH,uBAjBD;AAkBH,qBAnBD,MAmBK;AACD,2BAAK,aAAL,CAAmB,KAAnB,CAAyB,iDAAzB;AACA,2BAAK,uBAAL,CAA6B,IAA7B;AACH;;;;;;;;;AACJ;AAjEL;AAAA;AAAA,wCAmEiB;AAAA;;AACT,iBAAO,IAAI,OAAJ,CAAqB,UAAE,OAAF,EAAU,MAAV,EAAqB;AAC7C,YAAA,MAAI,CAAC,WAAL,CACK,MADL,CACY,MAAI,CAAC,IAAL,CAAU,KADtB,EAEK,SAFL,CAEe,UAAC,OAAD,EAAY;AACnB,cAAA,MAAI,CAAC,IAAL,CAAU,KAAV;;AACA,cAAA,OAAO,CAAC,OAAD,CAAP;AACH,aALL,EAKM,UAAC,KAAD,EAAU;AACR,cAAA,MAAM,CAAC,KAAD,CAAN;AACH,aAPL;AAQH,WATM,CAAP;AAUH;AA9EL;AAAA;AAAA,yCAgF2B,OAhF3B,EAgFkC;;;;;;;;;;sDACnB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B,sBAAA,MAAI,CAAC,WAAL,CAAiB,gBAAjB,CAAkC,OAAlC,EAA2C,SAA3C,CAAqD,UAAC,QAAD,EAAa;AAC9D,4BAAG,QAAQ,CAAC,MAAZ,EACI,OAAO,CAAC,IAAD,CAAP;AACJ,wBAAA,OAAO,CAAC,KAAD,CAAP;AACH,uBAJD,EAIE,UAAC,KAAD,EAAU;AACR,wBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,wBAAA,OAAO,CAAC,KAAD,CAAP;AACH,uBAPD;AAQH,qBATM,C;;;;;;;;;AAUV;AA3FL;AAAA;AAAA,yCA6F2B,OA7F3B,EA6FkC;;;;;;;;;;sDACnB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B,sBAAA,MAAI,CAAC,WAAL,CAAiB,gBAAjB,CAAkC,OAAlC,EAA2C,SAA3C,CAAqD,UAAC,QAAD,EAAa;AAC9D,4BAAG,QAAQ,CAAC,MAAZ,EACI,OAAO,CAAC,IAAD,CAAP;AACJ,wBAAA,OAAO,CAAC,KAAD,CAAP;AACH,uBAJD,EAIE,UAAC,KAAD,EAAU;AACR,wBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,wBAAA,OAAO,CAAC,KAAD,CAAP;AACH,uBAPD;AAQH,qBATM,C;;;;;;;;;AAUV;AAxGL;AAAA;AAAA,gDA0G4B,MA1G5B,EA0G0C;AAClC,eAAK,WAAL,GAAmB,MAAnB;AACA,eAAK,SAAL,CAAe,aAAf;AACH;AA7GL;;AAAA;AAAA,OAAA;;;;cAWqC,yEAAA,CAAA,oBAAA;;cACM,gFAAA,CAAA,0BAAA;;cACT,4CAAA,CAAA,gBAAA;;cACG,2CAAA,CAAA,aAAA;;cACF,0CAAA,CAAA,mBAAA;;cACI,6DAAA,CAAA,sBAAA;;cACR,4CAAA,CAAA,gBAAA;;cACC,4CAAA,CAAA,QAAA;;cACE,6DAAA,CAAA,sBAAA;;;;AAnBrB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAN7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACP,MAAA,QAAQ,EAAE,UADH;AAEP,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iGAAA,CAAA,EAAA,OAFO;AAIP,MAAA,eAAe,EAAE,0CAAA,CAAA,yBAAA,CAAA,CAAwB,MAJlC;;;;AAAA,KAAV,CAM6B,E,uEAWO,yEAAA,CAAA,oBAAA,C,EACM,gFAAA,CAAA,0BAAA,C,EACT,4CAAA,CAAA,gBAAA,C,EACG,2CAAA,CAAA,aAAA,C,EACF,0CAAA,CAAA,mBAAA,C,EACI,6DAAA,CAAA,sBAAA,C,EACR,4CAAA,CAAA,gBAAA,C,EACC,4CAAA,CAAA,QAAA,C,EACE,6DAAA,CAAA,sBAAA,C,EAnBJ,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAa,cAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAvB1B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACN,MAAA,YAAY,EAAE,CAAC,gDAAA,CAAA,mBAAA,CAAD,CADR;AAEN,MAAA,OAAO,EAAE,CACL,4CAAA,CAAA,cAAA,CADK,EAEL,2CAAA,CAAA,aAAA,CAFK,EAGL,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,CAClB;AACI,QAAA,IAAI,EAAE,EADV;AACc,QAAA,SAAS,EAAE,gDAAA,CAAA,mBAAA,CADzB;AAEI,QAAA,IAAI,EAAE;AAAC,UAAA,WAAW,EAAE,CAAC,WAAD,EAAc,UAAd;AAAd;AAFV,OADkB,EAKlB;AACI,QAAA,IAAI,EAAE,QADV;AACoB,QAAA,SAAS,EAAE,gDAAA,CAAA,mBAAA,CAD/B;AAEI,QAAA,OAAO,EAAE;AAAE,UAAA,IAAI,EAAE,kEAAA,CAAA,kBAAA;AAAR,SAFb;AAGI,QAAA,IAAI,EAAE;AAAC,UAAA,WAAW,EAAE,CAAC,WAAD,EAAc,UAAd;AAAd;AAHV,OALkB,CAAtB,CAHK,EAcL,wDAAA,CAAA,iBAAA,CAdK,EAeL,2CAAA,CAAA,qBAAA,CAfK,CAFH;AAmBN,MAAA,SAAS,EAAE,CACP,kEAAA,CAAA,kBAAA,CADO;AAnBL,KAAT,CAuB0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBb,QAAa,gBAAb;AAAA;AAAA;AAII,gCAAmB,WAAnB,EAAkD;AAAA;;AAA/B,aAAA,WAAA,GAAA,WAAA;AAAmC;;AAJ1D;AAAA;AAAA,gCAMY,KANZ,EAMyC;AACjC,eAAK,YAAL,GAAoB;AAChB,YAAA,MAAM,EAAG,CACL;AAAE,cAAA,IAAI,EAAG,IAAT;AAAe,cAAA,KAAK,EAAG,gBAAvB;AAAyC,cAAA,KAAK,EAAG,KAAK,CAAC,MAAN,CAAa;AAA9D,aADK;AADO,WAApB;AAKA,iBAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,YAA3B,CAAP;AACH;AAbL;;AAAA;AAAA,OAAA;;;;cAIoC,yEAAA,CAAA,oBAAA;;;;AAJvB,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAD5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EAC4B,E,uEAIO,yEAAA,CAAA,oBAAA,C,EAJP,CAAA,EAAhB,gBAAgB,CAAhB","sourcesContent":["export default \"<section>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-sm-8 col-lg-5 p-4 panel\\\">\\r\\n                <header class=\\\"text-center mb-3\\\">\\r\\n                    <h2 class=\\\"h2 g-color-black g-font-weight-600\\\">\\r\\n                        Fa√ßa o Cadastro\\r\\n                    </h2>\\r\\n                </header>\\r\\n                <form class=\\\"form-signin form-validate g-py-15\\\" (submit)=\\\"submit()\\\">\\r\\n                    <div [formGroup]=\\\"form\\\" class=\\\"mb-4\\\">\\r\\n                        <label [for]=\\\"'nome'\\\" class=\\\"g-color-gray-dark-v2 g-font-weight-600 g-font-size-13\\\">\\r\\n                            {{ ( form.get('tipo_pessoa') && form.get('tipo_pessoa')?.value ) ? \\\"Nome Fantasia\\\" : \\\"Nome Completo\\\" }}:\\r\\n                        </label>\\r\\n                        <input [id]=\\\"'nome'\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               formControlName=\\\"nome\\\"\\r\\n                               class=\\\"form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15\\\"\\r\\n                               placeholder=\\\"Seu nome completo\\\" required autofocus>\\r\\n                        <field-error [field]=\\\"'nome'\\\"\\r\\n                                     [label]=\\\"'Nome Completo'\\\"\\r\\n                                     [messages]=\\\"[]\\\"></field-error>\\r\\n                    </div>\\r\\n                    <div [formGroup]=\\\"form\\\" class=\\\"mb-4\\\">\\r\\n                        <label [for]=\\\"'email'\\\" class=\\\"g-color-gray-dark-v2 g-font-weight-600 g-font-size-13\\\">\\r\\n                            E-mail:\\r\\n                        </label>\\r\\n                        <input [id]=\\\"'email'\\\"\\r\\n                               type=\\\"email\\\"\\r\\n                               formControlName=\\\"email\\\"\\r\\n                               class=\\\"form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15\\\"\\r\\n                               placeholder=\\\"Digite o e-mail\\\" autofocus>\\r\\n                        <field-error [field]=\\\"'email'\\\"\\r\\n                                     [label]=\\\"'E-mail'\\\"\\r\\n                                     [messages]=\\\"[]\\\"></field-error>\\r\\n                    </div>\\r\\n                    <div [formGroup]=\\\"form\\\" class=\\\"mb-4\\\">\\r\\n                        <label [for]=\\\"'telefone'\\\" class=\\\"g-color-gray-dark-v2 g-font-weight-600 g-font-size-13\\\">\\r\\n                            Celular:\\r\\n                        </label>\\r\\n                        <input [id]=\\\"'telefone'\\\"\\r\\n                               formControlName=\\\"telefone\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15\\\"\\r\\n                               placeholder=\\\"Digite o Telefone\\\"\\r\\n                               (keydown)=\\\"functions.KeyTel(form,'telefone')\\\">\\r\\n\\r\\n                        <field-error [field]=\\\"'telefone'\\\"\\r\\n                                     [label]=\\\"'Celular'\\\"\\r\\n                                     [messages]=\\\"[]\\\"></field-error>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div [formGroup]=\\\"form\\\" class=\\\"g-mb-35\\\">\\r\\n                                <label [for]=\\\"'senha'\\\" class=\\\"g-color-gray-dark-v2 g-font-weight-600 g-font-size-13\\\">\\r\\n                                    Senha:\\r\\n                                </label>\\r\\n                                <input [id]=\\\"'senha'\\\"\\r\\n                                       formControlName=\\\"senha\\\"\\r\\n                                       type=\\\"password\\\"\\r\\n                                       data-msg=\\\"Por favor entre com a senha\\\"\\r\\n                                       class=\\\"form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15 mb-3\\\"\\r\\n                                       placeholder=\\\"Digite sua senha\\\">\\r\\n                                <field-error [field]=\\\"'senha'\\\"\\r\\n                                             [label]=\\\"'senha'\\\"\\r\\n                                             [messages]=\\\"[]\\\"></field-error>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div [formGroup]=\\\"form\\\" class=\\\"g-mb-35\\\">\\r\\n                                <label [for]=\\\"'confirma'\\\" class=\\\"g-color-gray-dark-v2 g-font-weight-600 g-font-size-13\\\">\\r\\n                                    Confirme a senha:\\r\\n                                </label>\\r\\n                                <input [id]=\\\"'confirma'\\\"\\r\\n                                       formControlName=\\\"confirma\\\"\\r\\n                                       type=\\\"password\\\"\\r\\n                                       data-msg=\\\"Por favor entre com a senha\\\"\\r\\n                                       class=\\\"form-control g-color-black g-bg-white g-bg-white--focus g-brd-gray-light-v4 g-brd-primary--hover rounded g-py-15 g-px-15 mb-3\\\"\\r\\n                                       placeholder=\\\"Confirme sua senha\\\">\\r\\n                                <field-error [field]=\\\"'confirma'\\\"\\r\\n                                             [label]=\\\"'Confirma√ß√£o'\\\"\\r\\n                                             [messages]=\\\"[]\\\"></field-error>\\r\\n                                <p *ngIf=\\\"form.get('senha').value != form.get('confirma').value\\\" class=\\\"invalid-feedback d-block\\\">\\r\\n                                    A senha e a confirma√ß√£o n√£o coincidem\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"mb-4 mt-4 d-flex justify-content-center\\\">\\r\\n                        <button class=\\\"btn btn-lg btn-danger waves-effect waves-themed\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                [hidden]=\\\"btnCadastro\\\"\\r\\n                                disabled=\\\"\\\">\\r\\n                            <span class=\\\"spinner-grow spinner-grow-sm\\\"\\r\\n                                  role=\\\"status\\\"\\r\\n                                  aria-hidden=\\\"true\\\"></span>\\r\\n                            Aguarde...\\r\\n                        </button>\\r\\n                        <button type=\\\"submit\\\"\\r\\n                                [hidden]=\\\"!btnCadastro\\\"\\r\\n                                [disabled]=\\\"!form.valid\\\"\\r\\n                                class=\\\"btn btn-lg btn-primary waves-effect waves-themed\\\">\\r\\n                            Cadastrar\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <footer class=\\\"text-center\\\">\\r\\n                    <p class=\\\"g-color-gray-dark-v5 g-font-size-13 mb-0\\\">\\r\\n                        Possuo uma conta,\\r\\n                        <a [routerLink]=\\\"['/auth']\\\" class=\\\"g-font-weight-600\\\">\\r\\n                            efetuar o login\\r\\n                        </a>\\r\\n                    </p>\\r\\n                </footer>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZlYXR1cmVzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnInit\r\n} from '@angular/core';\r\nimport {\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators\r\n} from \"@angular/forms\";\r\nimport { UsuarioHttpService } from \"../../services/http/cadastro/usuario-http.service\";\r\nimport { NotifyMessageService } from \"../../services/notify-message.service\";\r\nimport { Usuario } from \"../../model\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { BaseFunctionsService } from \"../../services/base-functions.service\";\r\nimport { UsuarioPerfilHttpService } from \"../../services/http/cadastro/usuario-perfil-http.service\";\r\n\r\n@Component({\r\n    selector: 'register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    // Objeto Usu√°rio\r\n    usuario : Usuario;\r\n\r\n    // Formul√°rio Reativo\r\n    form: FormGroup;\r\n\r\n    //Chave para apari√ß√£o do bot√£o cadastro\r\n    btnCadastro: boolean = true;\r\n    value: number;\r\n\r\n    constructor(private usuarioHttp: UsuarioHttpService,\r\n                private usuarioPerfilHttp: UsuarioPerfilHttpService,\r\n                private actRoute: ActivatedRoute,\r\n                private formBuilder: FormBuilder,\r\n                private changeRef: ChangeDetectorRef,\r\n                private notifyMessage: NotifyMessageService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                public functions: BaseFunctionsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Aplicando valida√ß√µes no formul√°rio reativo\r\n        this.redefinirFormulario();\r\n    }\r\n\r\n    redefinirFormulario() {\r\n        this.form = this.formBuilder.group({\r\n            nome        :   [ '' ,[ Validators.required ]],\r\n            email       :   [ '' ,[ Validators.required,Validators.email ]],\r\n            telefone    :   [ '' ,[ Validators.required ]],\r\n            senha       :   [ '' ,[ Validators.required ]],\r\n            confirma    :   [ '' ,[ Validators.required ]]\r\n        });\r\n    }\r\n\r\n    async submit()\r\n    {\r\n        this.changeStatusBtnCadastro(false);\r\n        let emailValido = await this.usuarioHttp.checaEmail(this.form.get('email').value);\r\n\r\n        if(emailValido){\r\n            this.salvarUsuario().then(async (usuario) => {\r\n                await this.usuarioPerfilHttp.salvarPerfil(usuario,'Administrador');\r\n\r\n                let result = await this.enviaConfirmacao(usuario);\r\n\r\n                if(result){\r\n                    this.notifyMessage.success('Voc√™ se cadastrou com sucesso, acesse o email na caixa de entrada para ativar sua conta',3000).then(() => {\r\n                        this.router.navigateByUrl('/auth');\r\n                    });\r\n                }else\r\n                    this.notifyMessage.error('Houve um erro ao enviar o e-mail de confirma√ß√£o, entre em contato com o administrador para solicitar a ativa√ß√£o');\r\n\r\n                this.changeStatusBtnCadastro(true);\r\n            },(error) => {\r\n                console.log(error);\r\n                this.notifyMessage.error('Houve um erro ao cadastrar o usu√°rio, entre em contato com o administrador');\r\n                this.changeStatusBtnCadastro(true);\r\n            });\r\n        }else{\r\n            this.notifyMessage.error('Esse e-mail j√° est√° cadastrado em nosso sistema');\r\n            this.changeStatusBtnCadastro(true);\r\n        }\r\n    }\r\n\r\n    salvarUsuario(): Promise<Usuario> {\r\n        return new Promise<Usuario>(( resolve,reject ) => {\r\n            this.usuarioHttp\r\n                .create(this.form.value)\r\n                .subscribe((usuario) => {\r\n                    this.form.reset();\r\n                    resolve(usuario);\r\n                },(error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    async enviaConfirmacao(usuario): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.usuarioHttp.enviaConfirmacao(usuario).subscribe((response) => {\r\n                if(response.result)\r\n                    resolve(true);\r\n                resolve(false);\r\n            },(error) => {\r\n                console.log(error);\r\n                resolve(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    async enviaNotificacao(usuario): Promise<boolean> {\r\n        return new Promise((resolve) => {\r\n            this.usuarioHttp.enviaNotificacao(usuario).subscribe((response) => {\r\n                if(response.result)\r\n                    resolve(true);\r\n                resolve(false);\r\n            },(error) => {\r\n                console.log(error);\r\n                resolve(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    changeStatusBtnCadastro(status:boolean) {\r\n        this.btnCadastro = status;\r\n        this.changeRef.detectChanges();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BootstrapModule } from \"../../bootstrap/bootstrap.module\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RegisterComponent } from \"./register.component\";\r\nimport { RegisterResolver } from \"../../resolvers/register/register-resolver\";\r\n\r\n@NgModule({\r\n    declarations: [RegisterComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: RegisterComponent,\r\n                data: {breadcrumbs: ['Dashboard', 'Register']}\r\n            },\r\n            {\r\n                path: ':chave', component: RegisterComponent,\r\n                resolve: { list: RegisterResolver },\r\n                data: {breadcrumbs: ['Dashboard', 'Register']}\r\n            }\r\n        ]),\r\n        BootstrapModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        RegisterResolver\r\n    ]\r\n})\r\nexport class RegisterModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { UsuarioHttpService } from \"../../services/http/cadastro/usuario-http.service\";\r\nimport { SearchParams } from \"../../model\";\r\n\r\n@Injectable()\r\nexport class RegisterResolver implements Resolve<any> {\r\n\r\n    searchParams: SearchParams;\r\n\r\n    constructor(public httpService: UsuarioHttpService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        this.searchParams = {\r\n            filter : [\r\n                { type : 'eq', field : 'activation_key', value : route.params.chave }\r\n            ]\r\n        };\r\n        return this.httpService.list(this.searchParams);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"features-register-register-module-es5.js"}