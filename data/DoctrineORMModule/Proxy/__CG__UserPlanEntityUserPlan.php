<?php

namespace DoctrineORMModule\Proxy\__CG__\UserPlan\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserPlan extends \UserPlan\Entity\UserPlan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'id', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'user', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'plan', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'payment_method', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'wallet', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'account', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'first_cycle', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'receipt', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'status', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'approved_date', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'updated_at', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'created_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'id', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'user', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'plan', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'payment_method', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'wallet', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'account', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'first_cycle', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'receipt', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'status', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'approved_date', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'updated_at', '' . "\0" . 'UserPlan\\Entity\\UserPlan' . "\0" . 'created_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserPlan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updated_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlan', []);

        return parent::getPlan();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlan($plan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlan', [$plan]);

        return parent::setPlan($plan);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', []);

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethod($payment_method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethod', [$payment_method]);

        return parent::setPaymentMethod($payment_method);
    }

    /**
     * {@inheritDoc}
     */
    public function getWallet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWallet', []);

        return parent::getWallet();
    }

    /**
     * {@inheritDoc}
     */
    public function setWallet($wallet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWallet', [$wallet]);

        return parent::setWallet($wallet);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccount', []);

        return parent::getAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccount($account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccount', [$account]);

        return parent::setAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstCycle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstCycle', []);

        return parent::getFirstCycle();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstCycle($first_cycle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstCycle', [$first_cycle]);

        return parent::setFirstCycle($first_cycle);
    }

    /**
     * {@inheritDoc}
     */
    public function getReceipt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReceipt', []);

        return parent::getReceipt();
    }

    /**
     * {@inheritDoc}
     */
    public function setReceipt($receipt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReceipt', [$receipt]);

        return parent::setReceipt($receipt);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStr', []);

        return parent::getStatusStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedDate', []);

        return parent::getApprovedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getApprovedDateStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApprovedDateStr', []);

        return parent::getApprovedDateStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDateStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDateStr', []);

        return parent::getExpirationDateStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', []);

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getDaysRemainingStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaysRemainingStr', []);

        return parent::getDaysRemainingStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setApprovedDate($approved_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApprovedDate', [$approved_date]);

        return parent::setApprovedDate($approved_date);
    }

}
